
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<extensions>
		<add assembly="NLog.Extended" />
	</extensions>
	<!--nitesh.nayee@jetcodersolutions.com;bijaykapali@outlook.com-->
	<targets async="true">

		<!-- Database logging targets. -->
		<target name="db" xsi:type="BufferingWrapper" bufferSize="100" slidingTimeout="True" flushTimeout="5000">
			<target xsi:type="Database"
					keepConnection="false"
					useTransactions="true"
					dbProvider="mssql"
					connectionStringName="LoggerConnectionString">
				<commandText>
					INSERT INTO [Inventory].[dbo].[TraceLogs]
					([LogGuid],[LogDateTime],[Level],[MachineName],[Class],[Message],[Exception],[GCTotalMemory],[GCGen0Count]
					,[GCGen1Count],[GCGen2Count],[GCMaxGen],[ProcessId],[Identity])
					VALUES
					(@LogGuid,@LogDateTime,@Level,@MachineName,@Class,@Message,@Exception,@GCTotalMemory,@GCGen0Count,@GCGen1Count,
					@GCGen2Count,@GCMaxGen,@ProcessId,@Identity);
				</commandText>
				<parameter name="@LogGuid" layout="${guid}" />
				<parameter name="@LogDateTime" layout="${longdate:universalTime=True}" />
				<parameter name="@Level" layout="${level:uppercase=true}" />
				<parameter name="@MachineName" layout="${machinename:uppercase=true}" />
				<parameter name="@Class" layout="${logger}" />
				<parameter name="@Message" layout="${message}" />
				<parameter name="@Exception" layout="${exception:separator=;:format=Message,Type,ShortType,ToString,Method,StackTrace}" />
				<parameter name="@GCTotalMemory" layout="${gc:property=TotalMemory}" />
				<parameter name="@GCGen0Count" layout="${gc:property=CollectionCount0}" />
				<parameter name="@GCGen1Count" layout="${gc:property=CollectionCount1}" />
				<parameter name="@GCGen2Count" layout="${gc:property=CollectionCount2}" />
				<parameter name="@GCMaxGen" layout="${gc:property=MaxGeneration}" />
				<parameter name="@ProcessId" layout="${processid}" />
				<parameter name="@Identity" layout="${identity:authType=False:separator=,:name=True:isAuthenticated=True}" />
			</target>
		</target>

		<!-- SMTP Email to Development / Support. -->
		<target name="mail" xsi:type="BufferingWrapper" bufferSize="100" slidingTimeout="True" flushTimeout="5000">
			<target xsi:type="Mail"
					smtpServer="mail.jetcodersolutions.com"
					from="do-not-reply@jetcodersolutions.com"
				
					to="bijay.kapali@jetcodersolutions.com"
					subject="[Jewel Inventory] - Error/Fatal Message"
layout="#####################################################${newline}

      Level: ${level:uppercase=true}${newline}
    EventId: ${guid}${newline}
   DateTime: ${longdate:universalTime=True} (UTC)${newline}
Thread Name: ${threadname}${newline}
  Call Site: ${callsite}${newline}
Authorized: ${identity:authType=False:name=False:isAuthenticated=True} ${newline}
Username: ${event-context:item=CurrentUser}${newline}

Message: ${message}

Exception: ${exception:format=ToString}
					
Machine Name: ${machinename:uppercase=true}
ProcessId: ${processid}
${newline}

#####################################################

">
			</target>
		</target>

		<!-- File log version (can be extensive, may want to turn on only for debugging).  -->
		<target name="file" xsi:type="File"
			fileName="${basedir}../log-${machinename:uppercase=true}/${shortdate}.log"
			keepFileOpen="true"
		layout="#####################################################${newline}

      Level: ${level:uppercase=true}
    EventId: ${guid}
   DateTime: ${longdate:universalTime=True} (UTC)
Thread Name: ${threadname}
  Call Site: ${callsite}
  Username: ${event-context:item=CurrentUser}
Message: ${message}

Exception: ${exception:format=ToString}
					
Machine Name: ${machinename:uppercase=true}
ProcessId: ${processid}
${newline}

#####################################################

">
		</target>

	</targets>

	<rules>
		<!--
			Nothing is enabled for local development as this would create some massive logs.  If you want to
			enable logging, uncomment the one below that has writeTo="file".  This will log all levels to
			a file under /log of the website in question.
		
			Log levels (in order):
			
				• Fatal 
				• Error 
				• Warn 
				• Info 
				• Debug 
				• Trace 
				• Off 
		-->

		<!--<logger name="*" minlevel="Off" writeTo="mail" />-->-->
		<!--<logger name="*" minlevel="Warn" writeTo="db" />-->
		<!--<logger name="*" minlevel="Trace" writeTo="file" />-->
		
	</rules>

</nlog>
