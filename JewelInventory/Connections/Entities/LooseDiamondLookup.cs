//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using JetCoders.Shared;

namespace Connections
{
    [Serializable]
    public partial class LooseDiamondLookup : IEntityBase
    {
        #region Primitive Properties
    
        public virtual int LooseDiamondLookupId
        {
            get;
            set;
        }
    
        public virtual string FinancialYearCode
        {
            get;
            set;
        }
    
        public virtual System.DateTime TransactionDate
        {
            get;
            set;
        }
    
        public virtual string ContactName
        {
            get;
            set;
        }
    
        public virtual string DocNumber
        {
            get;
            set;
        }
    
        public virtual string Remarks
        {
            get;
            set;
        }
    
        public virtual string TransactionPartyRef
        {
            get;
            set;
        }
    
    	public TransactionType TransactionType
    	{
    		get { return (TransactionType) TransactionType_Enum; }
    		set { TransactionType_Enum = (short) value; }
    	}
        public virtual short TransactionType_Enum
        {
            get;
            set;
        }
    
        public virtual System.DateTime AccessedDate
        {
            get;
            set;
        }
    
        public virtual int AccessedBy
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<LooseDiamondTransaction> LooseDiamondTransactions
        {
            get
            {
                if (_looseDiamondTransactions == null)
                {
                    var newCollection = new FixupCollection<LooseDiamondTransaction>();
                    newCollection.CollectionChanged += FixupLooseDiamondTransactions;
                    _looseDiamondTransactions = newCollection;
                }
                return _looseDiamondTransactions;
            }
            set
            {
                if (!ReferenceEquals(_looseDiamondTransactions, value))
                {
                    var previousValue = _looseDiamondTransactions as FixupCollection<LooseDiamondTransaction>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLooseDiamondTransactions;
                    }
                    _looseDiamondTransactions = value;
                    var newValue = value as FixupCollection<LooseDiamondTransaction>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLooseDiamondTransactions;
                    }
                }
            }
        }
        private ICollection<LooseDiamondTransaction> _looseDiamondTransactions;

        #endregion

        #region Association Fixup
    
        private void FixupLooseDiamondTransactions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LooseDiamondTransaction item in e.NewItems)
                {
                    item.LooseDiamondLookup = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LooseDiamondTransaction item in e.OldItems)
                {
                    if (ReferenceEquals(item.LooseDiamondLookup, this))
                    {
                        item.LooseDiamondLookup = null;
                    }
                }
            }
        }

        #endregion

    }
}
