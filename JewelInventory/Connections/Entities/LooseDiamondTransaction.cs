//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using JetCoders.Shared;

namespace Connections
{
    [Serializable]
    public partial class LooseDiamondTransaction : IEntityBase
    {
        #region Primitive Properties
    
        public virtual int LooseDiamondTransactionId
        {
            get;
            set;
        }
    
        public virtual decimal SieveSize
        {
            get;
            set;
        }
    
        public virtual System.DateTime TransactionDate
        {
            get;
            set;
        }
    
        public virtual decimal DiamondWeight
        {
            get;
            set;
        }
    
        public virtual string Quality
        {
            get;
            set;
        }
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual string LooseDiamondType
        {
            get;
            set;
        }
    
    	public TransactionType TransactionType
    	{
    		get { return (TransactionType) TransactionType_Enum; }
    		set { TransactionType_Enum = (short) value; }
    	}
        public virtual short TransactionType_Enum
        {
            get;
            set;
        }
    
        public virtual System.DateTime AccessedDate
        {
            get;
            set;
        }
    
        public virtual int AccessedBy
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual LooseDiamondLookup LooseDiamondLookup
        {
            get { return _looseDiamondLookup; }
            set
            {
                if (!ReferenceEquals(_looseDiamondLookup, value))
                {
                    var previousValue = _looseDiamondLookup;
                    _looseDiamondLookup = value;
                    FixupLooseDiamondLookup(previousValue);
                }
            }
        }
        private LooseDiamondLookup _looseDiamondLookup;

        #endregion

        #region Association Fixup
    
        private void FixupLooseDiamondLookup(LooseDiamondLookup previousValue)
        {
            if (previousValue != null && previousValue.LooseDiamondTransactions.Contains(this))
            {
                previousValue.LooseDiamondTransactions.Remove(this);
            }
    
            if (LooseDiamondLookup != null)
            {
                if (!LooseDiamondLookup.LooseDiamondTransactions.Contains(this))
                {
                    LooseDiamondLookup.LooseDiamondTransactions.Add(this);
                }
            }
        }

        #endregion

    }
}
