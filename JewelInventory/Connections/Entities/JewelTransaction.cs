//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using JetCoders.Shared;

namespace Connections
{
    [Serializable]
    public partial class JewelTransaction : IEntityBase
    {
        #region Primitive Properties
    
        public virtual int JewelTransactionId
        {
            get;
            set;
        }
    
        public virtual System.DateTime TransactionDate
        {
            get;
            set;
        }
    
        public virtual string CertificateNumber
        {
            get;
            set;
        }
    
        public virtual string JewelType
        {
            get;
            set;
        }
    
        public virtual string JewelNumber
        {
            get;
            set;
        }
    
        public virtual string DesignCode
        {
            get;
            set;
        }
    
        public virtual decimal TotalWeight
        {
            get;
            set;
        }
    
        public virtual decimal MetalWeight
        {
            get;
            set;
        }
    
        public virtual string MetalColor
        {
            get;
            set;
        }
    
        public virtual decimal StoneWeight
        {
            get;
            set;
        }
    
        public virtual int StonePcs
        {
            get;
            set;
        }
    
        public virtual decimal CStoneWeight
        {
            get;
            set;
        }
    
        public virtual int CStonePcs
        {
            get;
            set;
        }
    
        public virtual decimal TotalAmount
        {
            get;
            set;
        }
    
    
    	private TransactionDetails _properties = null;
    	
    	public virtual TransactionDetails Properties
    	{
    		get 
    		{
    			if ( _properties == null )
    				_properties = new TransactionDetails();
    				
    			return _properties;
    		}
    		
    		set { _properties = value; }
    	}
        private string TransactionDetails_Xml
        {
    		get { return this.Properties.Serialize<TransactionDetails>().ToString(); }
    		set { this.Properties = DataContractHelper.Deserialize<TransactionDetails>(value); }
        }
    
    	public TransactionType TransactionType
    	{
    		get { return (TransactionType) TransactionType_Enum; }
    		set { TransactionType_Enum = (short) value; }
    	}
        public virtual short TransactionType_Enum
        {
            get;
            set;
        }
    
        public virtual string TransactionPartyRef
        {
            get;
            set;
        }
    
    	public JewelItemCategory JewelItemCategory
    	{
    		get { return (JewelItemCategory) JewelItemCategory_Enum; }
    		set { JewelItemCategory_Enum = (short) value; }
    	}
        public virtual short JewelItemCategory_Enum
        {
            get;
            set;
        }
    
        public virtual string KT
        {
            get;
            set;
        }
    
        public virtual System.DateTime AccessedDate
        {
            get;
            set;
        }
    
        public virtual int AccessedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<int> UpdatedTransactionBy
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual CostingDetail CostingDetail
        {
            get { return _costingDetail; }
            set
            {
                if (!ReferenceEquals(_costingDetail, value))
                {
                    var previousValue = _costingDetail;
                    _costingDetail = value;
                    FixupCostingDetail(previousValue);
                }
            }
        }
        private CostingDetail _costingDetail;
    
        public virtual TransactionLookup TransactionLookup
        {
            get { return _transactionLookup; }
            set
            {
                if (!ReferenceEquals(_transactionLookup, value))
                {
                    var previousValue = _transactionLookup;
                    _transactionLookup = value;
                    FixupTransactionLookup(previousValue);
                }
            }
        }
        private TransactionLookup _transactionLookup;

        #endregion

        #region Association Fixup
    
        private void FixupCostingDetail(CostingDetail previousValue)
        {
            if (previousValue != null && previousValue.PurchaseTransaction.Contains(this))
            {
                previousValue.PurchaseTransaction.Remove(this);
            }
    
            if (CostingDetail != null)
            {
                if (!CostingDetail.PurchaseTransaction.Contains(this))
                {
                    CostingDetail.PurchaseTransaction.Add(this);
                }
            }
        }
    
        private void FixupTransactionLookup(TransactionLookup previousValue)
        {
            if (previousValue != null && previousValue.JewelTransactions.Contains(this))
            {
                previousValue.JewelTransactions.Remove(this);
            }
    
            if (TransactionLookup != null)
            {
                if (!TransactionLookup.JewelTransactions.Contains(this))
                {
                    TransactionLookup.JewelTransactions.Add(this);
                }
            }
        }

        #endregion

    }
}
